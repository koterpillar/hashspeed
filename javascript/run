#!/usr/bin/env js

MIN_ITEM = 'a';
MAX_ITEM = 'z';

rnd_state = 1;

function myrandom() {
    rnd_state = (rnd_state * 1103515245 + 12345) & 0x7FFFFFFF;
    return rnd_state;
}

function item() {
    return String.fromCharCode(
        MIN_ITEM.charCodeAt(0)
        + myrandom() % (MAX_ITEM.charCodeAt(0) - MIN_ITEM.charCodeAt(0) + 1)
    );
}

function width() {
    return myrandom() % 9 + 1;
}

function generate(depth) {
    if (depth == 0) {
        return item();
    } else {
        var node = {};
        var twidth = width();
        for (var i = 0; i < twidth; i++) {
            var it = item();
            node[it] = generate(depth - 1);
        }
        return node;
    }
}

function count_accum(tree, accum) {
    if (typeof(tree) == 'string') {
        accum[tree]++;
    } else {
        for(it in tree) {
            accum[it]++;
            count_accum(tree[it], accum);
        }
    }
}

function count(tree) {
    var result = {};
    for (var c = MIN_ITEM.charCodeAt(0); c <= MAX_ITEM.charCodeAt(0); c++) {
        result[String.fromCharCode(c)] = 0;
    }
    count_accum(tree, result);
    return result;
}

depth = process.argv[2];
tree = generate(depth);
if (depth < 4)
    console.log(tree);

counts = count(tree);
console.log(counts);
